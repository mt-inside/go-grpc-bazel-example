# ? Code to get repos of bazel macros and commands, over http and git
# ? Loaded from a built-in repository
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive", "http_file")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

# == Golang ==

# Load the rules' repo
http_archive(
    name = "io_bazel_rules_go",
    sha256 = "6f111c57fd50baf5b8ee9d63024874dd2a014b069426156c55adbf6d3d22cb7b",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_go/releases/download/v0.25.0/rules_go-v0.25.0.tar.gz",
        "https://github.com/bazelbuild/rules_go/releases/download/v0.25.0/rules_go-v0.25.0.tar.gz",
    ],
)

# From that repo, load these macros
load("@io_bazel_rules_go//go:deps.bzl", "go_register_toolchains", "go_rules_dependencies")

go_rules_dependencies()  # Dependencies for the toolchain and the rules' code itself

go_register_toolchains(version = "1.15.5")  # Install a Golang toolchain into the sandbox

# == Gazelle ==

# Repo
http_archive(
    name = "bazel_gazelle",
    sha256 = "b85f48fa105c4403326e9525ad2b2cc437babaa6e15a3fc0b1dbab0ab064bc7c",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-gazelle/releases/download/v0.22.2/bazel-gazelle-v0.22.2.tar.gz",
        "https://github.com/bazelbuild/bazel-gazelle/releases/download/v0.22.2/bazel-gazelle-v0.22.2.tar.gz",
    ],
)

# From that repo, load these macros
load("@bazel_gazelle//:deps.bzl", "gazelle_dependencies", "go_repository")  # we need go_repository later, and it's in here because it uses gazelle to generate bazel build files for the code in the repos.

gazelle_dependencies()  # Deps for the gazelle rules

# Load the bazel file auto-generated by `gazelle update-repos`
load("//:go_repos.bzl", "go_repositories")

# gazelle:repository_macro go_repos.bzl%go_repositories
go_repositories()  # Run the macro in that file to define all of the golang dependencies

# == Proto ==

# Repo
http_archive(
    name = "rules_proto",
    sha256 = "602e7161d9195e50246177e7c55b2f39950a9cf7366f74ed5f22fd45750cd208",
    strip_prefix = "rules_proto-97d8af4dc474595af3900dd85cb3a29ad28cc313",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_proto/archive/97d8af4dc474595af3900dd85cb3a29ad28cc313.tar.gz",
        "https://github.com/bazelbuild/rules_proto/archive/97d8af4dc474595af3900dd85cb3a29ad28cc313.tar.gz",
    ],
)

# From that repo, load these macros
load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")

rules_proto_dependencies()  # Deps for the protobuf compiler and rules

rules_proto_toolchains()  # Install protoc into the sandbox

# == gRPC ==

# Would be needed if we weren't using gazelle itself (and thus already done this), as the gRPC stuff loads go_repositories, which in turn use gazelle stuff to get built.
# load("@bazel_gazelle//:deps.bzl", "gazelle_dependencies", "go_repository")
# gazelle_dependencies()

# Not strictly needed since we're using Gazelle and we "import google.golang.org/grpc" somewhere, so it would be auto-generated
go_repository(
    name = "org_golang_google_grpc",
    build_file_proto_mode = "disable",  # que?
    importpath = "google.golang.org/grpc",
    sum = "h1:wdKvqQk7IttEw92GoRyKG2IDrUIpgpj6H6m81yfeMW0=",
    version = "v1.25.1",
)

go_repository(
    name = "org_golang_x_net",
    importpath = "golang.org/x/net",
    sum = "h1:R/3boaszxrf1GEUWTVDzSKVwLmSJpwZ1yqXm8j0v2QI=",
    version = "v0.0.0-20190620200207-3b0461eec859",
)

go_repository(
    name = "org_golang_x_text",
    importpath = "golang.org/x/text",
    sum = "h1:tW2bmiBqwgJj/UpqtC8EpXEZVYOwU0yG4iWbprSVAcs=",
    version = "v0.3.2",
)

# == Docker ==

# Load the rules' repo
http_archive(
    name = "io_bazel_rules_docker",
    sha256 = "1698624e878b0607052ae6131aa216d45ebb63871ec497f26c67455b34119c80",
    strip_prefix = "rules_docker-0.15.0",
    urls = ["https://github.com/bazelbuild/rules_docker/releases/download/v0.15.0/rules_docker-v0.15.0.tar.gz"],
)

# From that repo, load these macros
load("@io_bazel_rules_docker//repositories:repositories.bzl", container_repositories = "repositories")

# And execute
container_repositories()  # ??

load("@io_bazel_rules_docker//repositories:deps.bzl", container_deps = "deps")

container_deps()

# Now golang-specific stuff...
# Load
load("@io_bazel_rules_docker//go:image.bzl", _go_image_repos = "repositories")

# Execute
_go_image_repos()

http_file(
    name = "probe",
    sha256 = "bfbe82e34645e91cdf3bacbb0d2dc7786f3c3cc4da6b64a446e5fdfb7bb0429f",
    urls = ["https://github.com/grpc-ecosystem/grpc-health-probe/releases/download/v0.3.1/grpc_health_probe-linux-amd64"],
)
